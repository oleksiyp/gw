buildscript {
    ext.kotlin_version = '1.2.21'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

group 'gw'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

ext.junitJupiterVersion = '5.0.3'
ext.junitVintageVersion = '4.12.0'
ext.mockKVersion = '1.7.10-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'io.netty', name: 'netty-all', version: '4.1.21.Final'
    compile 'io.netty:netty-tcnative-boringssl-static:2.0.7.Final:linux-x86_64'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.1'
    compile group: 'dnsjava', name: 'dnsjava', version: '2.1.8'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile "io.mockk:mockk:$mockKVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}